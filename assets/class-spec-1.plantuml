@startuml
package java.lang {
    
    interface Iterable<T> {
        +Iterator<T> iterator()
    }

    interface Iterator<T> {
        +boolean hasNext()
        +T next()
    }
}

package de.fhro.inf.prg3.a04.collections {
        interface SimpleFilter<T> {
            +include(item: T): boolean
        }

        interface SimpleList<T> extends Iterable {
            +add(item: T)
            +addEmpty()
            +size(): int
            +filter(filter: SimpleFilter<T>): SimpleList
        }

        class SimpleListImpl<T> implements SimpleList {
           -head: Element
        }

        class SimpleIteratorImpl implements Iterator {
        }

        -class Element<T> {
            -item: T
            -next: Element<T>
    
            +getItem(): T
            +getNext(): Element<T>
            +setNext(e: Element<T>)
        }

        SimpleListImpl +-- Element
        Element --* SimpleListImpl
    }
@enduml